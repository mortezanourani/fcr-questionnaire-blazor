@page "/Dashboard/Questionnaires"

<header class="page-header">
    <div class="container">
        <h3 class="page-title">پرسشنامه ها</h3>
        <nav class="page-navbar">
            <NavLink class="small-link" href="/Dashboard/Questionnaires/Create">پرسشنامه جدید</NavLink>
        </nav>
    </div>
</header>

<div class="content container">
    @if (questionnaires is null)
    {
        <Loading />
    }
    else
    {
        @if (questionnaires.Count() < 1)
        {
            <h4>هیچ پرسشنامه ای یافت نشد.</h4>
        }
        else
        {
            <QuickGrid Items="questionnaires.AsQueryable()">
                <PropertyColumn IsDefaultSortColumn=true Title="ردیف" Property="@(questionnaire => questionnaire.Priority)" />
                <PropertyColumn Class="nowrap text-right" IsDefaultSortColumn=true Title="عنوان پرسشنامه" Property="@(questionnaire => questionnaire.Title)" />
                <PropertyColumn Class="text-right" Title="توضیحات پرسشنامه" Property="@(questionnaire => questionnaire.Description)" />
                <PropertyColumn Title="تعداد گویه" Property="@(questionnaire => questionnaire.Questions!.Count)" />
                <TemplateColumn Title="">
                    <NavLink class="small-link" href="@($"/Dashboard/Questionnaires/Edit/{context.Id}")">ویرایش</NavLink>
                    <NavLink class="small-link" href="@($"/Dashboard/Questionnaires/{context.Id}/Questions")">گویه ها</NavLink>
                    <NavLink class="small-link red-link" href="@($"/Dashboard/Questionnaires/Delete/{context.Id}")">حذف</NavLink>
                </TemplateColumn>
            </QuickGrid>
        }
    }
</div>

@code {
    private List<Questionnaire> questionnaires = new List<Questionnaire>();

    protected override async Task OnInitializedAsync()
    {
        using var context = DbContextFactory.CreateDbContext();

        questionnaires = await context.Questionnaires
            .Include(q => q.Questions)
            .ToListAsync();
    }
}
