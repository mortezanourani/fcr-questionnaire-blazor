@page "/Dashboard/Questionnaires/{Id:guid}/Questions/Create"

<PageTitle>اضافه کردن گویه</PageTitle>

<header class="page-header">
    <div class="container">
        <h3 class="page-title">ایجاد گویه جدید</h3>
        <nav class="page-navbar">
            <NavLink class="small-link" href="@($"/Dashboard/Questionnaires/{Id}/Questions")">بازگشت به فهرست گویه ها</NavLink>
        </nav>
    </div>
</header>

<div class="content container">
    <div class="row">
        @if (questionnaire is null)
        {
            <h4>در حال بارگزاری...</h4>
        }
        else
        {
            <div class="form-wrapper">
                <div class="form-row">
                    <label class="form-label">عنوان پرسشنامه</label>
                    <p class="form-control">@questionnaire?.Title</p>
                </div>
                <EditForm method="post" Model="question" OnValidSubmit="AddQuestion" FormName="create" Enhance>
                    <DataAnnotationsValidator />
                    <ValidationSummary class="text-danger" role="alert" />
                    <input type="hidden" name="question.QuestionnaireId" value="@Id" />
                    <div class="form-row">
                        <label for="position" class="form-label">شماره گویه</label>
                        <InputNumber id="position" @bind-Value="question.Position" class="form-control" />
                        <ValidationMessage For="() => question.Position" class="text-danger" />
                    </div>
                    <div class="form-row">
                        <label for="text" class="form-label">متن عبارت گویه</label>
                        <InputText id="text" @bind-Value="question.Text" class="form-control" />
                        <ValidationMessage For="() => question.Text" class="text-danger" />
                    </div>
                    <div class="form-row">
                        <button type="submit">ثبت</button>
                    </div>
                </EditForm>
            </div>
        }
    </div>
</div>

@code {
    [Parameter]
    public Guid Id { get; set; }

    private Questionnaire? questionnaire;

    [SupplyParameterFromForm]
    private Question question { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        using var context = DbContextFactory.CreateDbContext();
        questionnaire ??= await context.Questionnaires
            .FirstOrDefaultAsync(q => q.Id == Id);
    }

    private async Task AddQuestion()
    {
        using var context = DbContextFactory.CreateDbContext();
        context.Questions.Add(question);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo($"/Dashboard/Questionnaires/{Id}/Questions");
    }
}
