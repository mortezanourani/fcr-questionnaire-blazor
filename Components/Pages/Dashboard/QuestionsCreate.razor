@page "/Dashboard/Questionnaires/{Id:guid}/Questions/Create"

@rendermode InteractiveServer

<PageTitle>اضافه کردن گویه</PageTitle>

<header class="page-header">
    <div class="container">
        <h3 class="page-title">گویه جدید</h3>
        <nav class="page-navbar">
            <NavLink class="small-link" href="@($"/Dashboard/Questionnaires/{Id}/Questions")">بازگشت به فهرست گویه ها</NavLink>
        </nav>
    </div>
</header>

<div class="content container">
    <div class="row">
        @if (questionnaire is null)
        {
            <h4>در حال بارگزاری...</h4>
        }
        else
        {
            <div class="form-wrapper">
                <div class="form-row">
                    <label class="form-label">عنوان پرسشنامه</label>
                    <p class="form-control">@questionnaire?.Title</p>
                </div>
                <EditForm method="post" Model="question" OnValidSubmit="AddQuestion" FormName="create" Enhance>
                    <DataAnnotationsValidator />
                    <ValidationSummary class="text-danger" role="alert" />
                    <input type="hidden" name="question.QuestionnaireId" value="@Id" />
                    <div class="form-row">
                        <label for="position" class="form-label">شماره گویه</label>
                        <InputNumber id="position" @bind-Value="question.Position" class="form-control" />
                        <ValidationMessage For="() => question.Position" class="text-danger" />
                    </div>
                    <div class="form-row">
                        <label for="text" class="form-label">متن عبارت گویه</label>
                        <InputText id="text" @bind-Value="question.Text" class="form-control" />
                        <ValidationMessage For="() => question.Text" class="text-danger" />
                    </div>
                    <div class="form-row">
                        <label for="clarification" class="form-label">توضیح لازم برای شفافسازی گویه</label>
                        <InputText id="clarification" @bind-Value="question.Clarification" class="form-control" />
                        <ValidationMessage For="() => question.Clarification" class="text-danger" />
                    </div>
                    <div class="form-row">
                        <label for="scaleid" class="form-label">مقیاس نمره گزاری گویه</label>
                        <InputSelect id="scaleid" @bind-Value="question.ScaleId" class="form-control">
                            @foreach (Scale scale in scales!)
                            {
                                <option value="@scale.Id">@scale.Title</option>
                            }
                        </InputSelect>
                    </div>
                    <div class="form-row">
                        <button type="submit">ثبت</button>
                    </div>
                </EditForm>
            </div>
        }
    </div>
</div>

@code {
    [Parameter]
    public Guid Id { get; set; }

    [SupplyParameterFromForm]
    private Question question { get; set; } = new();

    private Questionnaire? questionnaire;

    private List<Scale>? scales;

    protected override async Task OnInitializedAsync()
    {
        using var context = DbContextFactory.CreateDbContext();
        questionnaire ??= await context.Questionnaires
            .FirstOrDefaultAsync(q => q.Id == Id);

        question.QuestionnaireId = questionnaire!.Id;

        scales ??= await context.Scales
            .Include(s => s.Options)
            .OrderBy(s => s.Title)
            .ToListAsync();

        question.ScaleId = scales.FirstOrDefault()!.Id;

        StateHasChanged();
    }

    private async Task AddQuestion()
    {
        using var context = DbContextFactory.CreateDbContext();
        context.Questions.Add(question);
        await context.SaveChangesAsync();

        NavigationManager.NavigateTo($"/Dashboard/Questionnaires/{Id}/Questions");
    }
}
